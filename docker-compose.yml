services:
  student-db:
    image: postgres:15
    container_name: student-db
    environment:
      POSTGRES_USER: student
      POSTGRES_PASSWORD: password
      POSTGRES_DB: students
    ports:
      - "5432:5432"
    volumes:
      - ./student-profile/init.sql:/docker-entrypoint-initdb.d/init.sql #seeding
      - student_data:/var/lib/postgresql/data # persistent storage
    networks:
      - microservices-net

  student-profile:
    build: ./student-profile
    container_name: student-profile
    environment:
    # DATABASE_URL: postgresql://[user]:[password]@[container-name]:[port]/[database]
    # from database environment variables
      DATABASE_URL: postgresql://student:password@student-db:5432/students
      FLASK_ENV: development
    depends_on:
      - student-db
    ports:
      - "5001:5001"
    networks:
      - microservices-net

  catalog-db:
    image: postgres:15
    container_name: catalog-db
    environment:
      POSTGRES_USER: catalog
      POSTGRES_PASSWORD: password
      POSTGRES_DB: catalog
    ports:
      - "5433:5432"
    volumes:
      - ./catalog-backend/init.sql:/docker-entrypoint-initdb.d/init.sql #seeding
      - catalog_data:/var/lib/postgresql/data # persistent storage
    networks:
      - microservices-net


  catalog-backend:
    build: ./catalog-backend
    container_name: catalog-backend
    environment:
    # DATABASE_URL: postgresql://[user]:[password]@[container-name]:[port]/[database]
    # from database environment variables
      DATABASE_URL: postgresql://catalog:password@catalog-db:5432/catalog
      FLASK_ENV: development
    depends_on:
      - catalog-db
    ports:
      - "5002:5002"
    networks:
      - microservices-net
  
  
  feedback-db:
    image: postgres:15
    container_name: feedback-db
    environment:
      POSTGRES_USER: feedback
      POSTGRES_PASSWORD: password
      POSTGRES_DB: feedback
    ports:
      - "5434:5432"
    volumes:
      - ./feedback-backend/init.sql:/docker-entrypoint-initdb.d/init.sql #seeding
      - feedback_data:/var/lib/postgresql/data # persistent storage
    networks:
      - microservices-net


  feedback-backend:
    build: ./feedback-backend
    container_name: feedback-backend
    environment:
    # DATABASE_URL: postgresql://[user]:[password]@[container-name]:[port]/[database]
    # from database environment variables
      DATABASE_URL: postgresql://feedback:password@feedback-db:5432/feedback
      FLASK_ENV: development
    depends_on:
      - feedback-db
    ports:
      - "5003:5003"
    networks:
      - microservices-net
  
  email-service:
    build: ./email-service
    container_name: email-service
    environment:
      FLASK_ENV: development
    ports:
      - "5004:5004"
    networks:
      - microservices-net


  admin-frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      CHOKIDAR_USEPOLLING: "true"
    depends_on:
      - student-profile
    networks:
      - microservices-net
  

  
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 9090:8080
    depends_on:
      - student-db
      - catalog-db
      - feedback-db
    networks:
      - microservices-net


networks:
  microservices-net:
    driver: bridge

volumes:
  student_data:
  catalog_data:
  feedback_data:
